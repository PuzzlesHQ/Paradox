--- a/finalforeach/cosmicreach/blockevents/BlockEventTrigger.java
+++ b/finalforeach/cosmicreach/blockevents/BlockEventTrigger.java
@@ -7,10 +_,12 @@
 import finalforeach.cosmicreach.util.predicates.GamePredicateBlockEventArgs;
 import java.util.function.Predicate;
 
+
 public class BlockEventTrigger implements Serializable {
 	private String triggerName;
 	private IBlockAction action;
 	private Predicate<BlockEventArgs> condition;
+	public boolean shouldAct = true;
 
 	@Override
 	public void write(Json json) {
@@ -43,10 +_,14 @@
 	}
 
 	public void act(BlockEventArgs args) {
+
 		try {
-			if (this.condition == null || this.condition.test(args)) {
-				this.action.act(args);
+			if(!com.github.puzzle.paradox.api.Paradox.getInstance().getEventBus().post(new com.github.puzzle.paradox.api.events.BlockEventEvents.OnEventAct(args)).isCanceled()) {
+				if (this.condition == null || this.condition.test(args)) {
+					this.action.act(args);
+				}
 			}
+
 		} catch (Exception exception) {
 			if (this.action != null) {
 				throw new RuntimeException("Error while triggering block event action " + this.action.getActionId() + " for block: " + args.srcBlockState, exception);
